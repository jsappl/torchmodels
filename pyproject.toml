[project]
name = "torchmodels"
version = "0.0.0"
description = "A collection of modular reusable PyTorch models."
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Johannes Sappl", email = "johannes.sappl@datalabhell.at"},
]
dependencies = [
    "torch>=2.2.1",
]

[project.urls]
Repository = "https://github.com/jsappl/torchmodels/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.0.2",
    "pytest-cov>=4.1.0",
]

[tool.pytest.ini_options]
addopts = [
    "--no-header",
    "--import-mode=importlib",
    "--cov=torchmodels/",
    "--cov-report=term-missing:skip-covered",
    "--disable-warnings",
]

[tool.ruff]
extend-exclude = ["__init__.py"]
ignore = [
    # Google docstring convention
    "D203", "D204", "D213", "D215", "D400", "D404", "D406", "D407", "D408", "D409", "D413",
]
line-length = 120
select = ["ARG", "B", "D", "E", "F", "I", "N", "W"]
target-version = "py311"

[tool.ruff.format]
exclude = ["*"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.yapf]
based_on_style = "facebook"
dedent_closing_brackets = false
split_before_first_argument = true
column_limit = 120
blank_line_before_nested_class_or_def = true
split_before_named_assigns = false
